{"version":3,"sources":["Components/AddCategory.js","helpers/getGifts.js","Components/GifgridItem.js","Components/ShowItems.js","GifExpertApp.js","index.js"],"names":["AddCategory","setAddCategory","useState","Inputplaceholder","setImput","onSubmit","e","preventDefault","trim","length","categoria","type","value","onChange","target","giftGenerate","categorias","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_large","console","log","GifgridItem","className","src","alt","ShowItems","imagesitos","setImages","useEffect","then","imagenes","GifExpertApp","category","elemento","document","querySelector","ReactDOM","render"],"mappings":"mMAmCeA,EA/BK,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAEd,EAAiCC,mBAAS,cAA1C,mBAAMC,EAAN,KAAuBC,EAAvB,KAcJ,OACI,sBAAMC,SAbsB,SAACC,GACjBA,EAAEC,iBACCJ,EAAiBK,OAAOC,OAAS,IAChCR,GAAe,SAACS,GAAD,OAAcP,GAAd,mBAAkCO,OACjDN,EAAS,MASzB,SACK,uBACGO,KAAK,OACLC,MAAOT,EACPU,SATuB,SAACP,GACpBF,EAASE,EAAEQ,OAAOF,a,+BCEvBG,EAhBG,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACTC,EADS,iDACqCC,UAAUH,GAD/C,+DAEEI,MAAMF,GAFR,cAETG,EAFS,gBAGIA,EAAIC,OAHR,uBAGRC,EAHQ,EAGRA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACJC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,gBAAgBZ,QAGrCa,QAAQC,IAAIR,GAXG,kBAaRA,GAbQ,4CAAD,sDCSHS,EAVK,SAAC,GAAoB,IAAnBN,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE3B,OADAa,QAAQC,IAAIL,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCwCDS,EA3CG,SAAC,GAAkB,IAAjBrB,EAAgB,EAAhBA,WAIf,EAA4Bd,mBAAS,IAArC,mBAAMoC,EAAN,KAAiBC,EAAjB,KAqBD,OAfCC,qBAAU,WACPzB,EAAaC,GACRyB,MAAK,SAACf,GACH,OAAOa,EAAUb,QAE1B,CAACV,IAWA,qCACA,6BAAKA,IACL,qBAAKkB,UAAU,OAAf,SAIYI,EAAWb,KAAI,SAACiB,GAAD,OACV,cAAC,EAAD,eAAmCA,GAAjBA,EAASf,aCFrCgB,EA7BM,WAIjB,MAAiCzC,mBAAS,CAAC,cAA3C,mBAAO0C,EAAP,KAAgB3C,EAAhB,KAMA,OACI,gCACI,0CAEA,cAAC,EAAD,CAAaA,eAAgBA,IAC7B,uBAEA,6BAEO2C,EAASnB,KAAI,SAACT,GAEV,OAAU,cAAC,EAAD,CAA6BA,WAAYA,GAAzBA,YCpB3C6B,G,MAASC,SAASC,cAAc,UAItCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.3956b5d6.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setAddCategory}) => {\r\n\r\n        const[Inputplaceholder,setImput]=useState(\"Hola mundo\");\r\n\r\n                const setFormulario=(e)=>{\r\n                    e.preventDefault();\r\n                    if(Inputplaceholder.trim().length > 2){\r\n                        setAddCategory((categoria)=>[Inputplaceholder,...categoria]);\r\n                        setImput(\"\");\r\n                    }\r\n                }\r\n                \r\n                const setInsertarValor=(e)=>{\r\n                    setImput(e.target.value);\r\n                }\r\n\r\n    return (\r\n        <form onSubmit={setFormulario}>\r\n             <input \r\n                type=\"text\"\r\n                value={Inputplaceholder}\r\n                onChange={setInsertarValor}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setAddCategory:PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\n\r\n\r\nconst giftGenerate=async(categorias)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categorias)}&api_key=bq67XqAqjmmU8ut92eY8VZXN9TapR6aj&limit=10`;\r\n    const res= await fetch(url);\r\n    const {data}=await res.json();\r\n    const gifs=data.map(img=>{\r\n       return {\r\n          id:img.id,\r\n          title:img.title,\r\n          url:img.images.downsized_large.url\r\n       } \r\n    })\r\n    console.log(gifs);\r\n    \r\n    return gifs;\r\n}\r\n\r\nexport default giftGenerate;","import React from 'react'\r\n\r\nconst GifgridItem = ({id,title,url}) => {\r\n    console.log(id,title,url);\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifgridItem; \r\n","import React, { useEffect, useState } from 'react'\r\nimport giftGenerate from '../helpers/getGifts';\r\nimport GifgridItem from './GifgridItem';\r\n\r\nconst ShowItems = ({categorias}) => {\r\n    \r\n\r\n    //  const[count,setCount]=useState(0);\r\n     const[imagesitos,setImages]=useState([]);\r\n\r\n    //  const RenderizarPagina=()=>{\r\n    //     setCount(count+1);\r\n    //  }\r\n     //para que solo me renderize una sola vez\r\n     useEffect(()=>{\r\n        giftGenerate(categorias)\r\n            .then((img)=>{\r\n                return setImages(img);\r\n            })\r\n     },[categorias]);\r\n    //dependencia de varias categorias no solo puede ser una por eso se le pone ,[categorias]\r\n    \r\n     //funcion---\r\n     \r\n    //FUNCION BUCLE SE  EJECUTA VARIAS VECES QUE SE RENDERIZA LA PAGINA\r\n    // giftGenerate();\r\n    \r\n   \r\n\r\n    return (\r\n        <>\r\n        <h2>{categorias}</h2>\r\n        <div className=\"caja\">\r\n            {/* <button onClick={RenderizarPagina}>aumentar</button> */}\r\n                    {/* //imagenes={imagenes} esto se detalla como propiedad completa    {...imagenes}=>indica la destructuracion de el arreglo*/}\r\n                {   \r\n                    imagesitos.map((imagenes)=>\r\n                         <GifgridItem key={imagenes.id} {...imagenes}/>\r\n                    )      \r\n                }\r\n       \r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShowItems;\r\n","\r\n\r\nimport React, { useState } from 'react'\r\nimport AddCategory from './Components/AddCategory';\r\nimport ShowItems from './Components/ShowItems';\r\n\r\nconst GifExpertApp = () => { \r\n    \r\n    //const arreglo=[\"Perro\",\"Gato\",\"Leon\"];\r\n\r\n    const [category,setAddCategory] =useState(['One Punch']);\r\n    // console.log(category);\r\n    // const AddCategoryLista=()=>{\r\n    //     setAddCategory(arreglo=>[...arreglo,valor]);\r\n    // }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Capstone</h1>\r\n            {/* aqui agrego con el buscador lo que quiero buscar */}\r\n            <AddCategory setAddCategory={setAddCategory}/>\r\n            <hr/>\r\n            {/* <button onClick={AddCategoryLista}>Add</button> */}\r\n            <ol>\r\n                {\r\n                   category.map((categorias)=>{\r\n                            // return <li key={categorias}>{categorias}</li>\r\n                       return    <ShowItems key={categorias}  categorias={categorias}/>\r\n                   })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nconst elemento=document.querySelector(\"#root\");\n\n\n\nReactDOM.render(<GifExpertApp />,elemento);"],"sourceRoot":""}